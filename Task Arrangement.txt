---------------------
|  Task Arrangement |
---------------------

Lalaport (monitor)

- Upload ads (post ads in mp4, select priority) - client
- Display ads () - displayer





JJ
--------------
- Backend
- Amazon DynamoDB
- Amazon S3
- AWS Lambda

Backend
- S3 (ads-video)
- dynamodb (user-ads) - userid (PK), user_video_link, video priority


{ 
  "video_timestamp": { 
    "N": "101010101"
  },
  "expired_date": {
    "N": "1010101022"
  },
  "priority": {  (user)
    "S": "High"
  },
  "user_id": {
    "S": "jj0002"
  },
  "video_s3_bucket_url": {
    "S": "arn::"
  }
}

CRUD - Create(add) Read(display, get, getid) Update(add) Delete(delete)

- lambda will concatatenate ads according to scheduling policy 
(trigger, when anyone upload new ads)


------------
displayer
1) request
   a) dynamo db --> random number, +timestamp
2) sort video link
   b) send (a) to user
   c) every 5 seconds use api update(a)
   d) backend --> check is it exist on dynamodb, (if exist) update the displayer display time. 
                  If timestamp too long, dont update, do (a) again
   e) after update, remove the entry on dynamodb, then repeat(a)
   
3) retrieve from bucket

4) create a api 



ZX 
--------------
- Front End
- Amplify - (Amazon Cognito)

3 website
- Login/Register

- Upload (Charge) 
(Upload the ads that user create mp4) 
(Throw s3 bucket, return link, link need to save inside DynamoDB)
      -higher median low
- CRUD 

- Display (Expense) 
(Download ads from dynamodb (fix location, name) --> Request lambda generate)



MX
--------------
- About me